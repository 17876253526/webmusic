<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.LikeMapper">
  <resultMap id="BaseResultMap" type="entity.Like">
    <id column="comment_like_id" jdbcType="INTEGER" property="commentLikeId" />
    <result column="comment_like_comment" jdbcType="INTEGER" property="commentLikeComment" />
    <result column="comment_like_user" jdbcType="INTEGER" property="commentLikeUser" />
  </resultMap>
  <sql id="Base_Column_List">
    comment_like_id, comment_like_comment, comment_like_user
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from like
    where comment_like_id = #{commentLikeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from like
    where comment_like_id = #{commentLikeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="entity.Like">
    insert into like (comment_like_id, comment_like_comment, 
      comment_like_user)
    values (#{commentLikeId,jdbcType=INTEGER}, #{commentLikeComment,jdbcType=INTEGER}, 
      #{commentLikeUser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="entity.Like">
    insert into like
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentLikeId != null">
        comment_like_id,
      </if>
      <if test="commentLikeComment != null">
        comment_like_comment,
      </if>
      <if test="commentLikeUser != null">
        comment_like_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentLikeId != null">
        #{commentLikeId,jdbcType=INTEGER},
      </if>
      <if test="commentLikeComment != null">
        #{commentLikeComment,jdbcType=INTEGER},
      </if>
      <if test="commentLikeUser != null">
        #{commentLikeUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Like">
    update like
    <set>
      <if test="commentLikeComment != null">
        comment_like_comment = #{commentLikeComment,jdbcType=INTEGER},
      </if>
      <if test="commentLikeUser != null">
        comment_like_user = #{commentLikeUser,jdbcType=INTEGER},
      </if>
    </set>
    where comment_like_id = #{commentLikeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Like">
    update like
    set comment_like_comment = #{commentLikeComment,jdbcType=INTEGER},
      comment_like_user = #{commentLikeUser,jdbcType=INTEGER}
    where comment_like_id = #{commentLikeId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="entity.Like">
    <id column="comment_like_id" jdbcType="INTEGER" property="commentLikeId" />
    <result column="comment_like_comment" jdbcType="INTEGER" property="commentLikeComment" />
    <result column="comment_like_user" jdbcType="INTEGER" property="commentLikeUser" />
  </resultMap>
  <sql id="Base_Column_List">
    comment_like_id, comment_like_comment, comment_like_user
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from like
    where comment_like_id = #{commentLikeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from like
    where comment_like_id = #{commentLikeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="entity.Like">
    insert into like (comment_like_id, comment_like_comment, 
      comment_like_user)
    values (#{commentLikeId,jdbcType=INTEGER}, #{commentLikeComment,jdbcType=INTEGER}, 
      #{commentLikeUser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="entity.Like">
    insert into like
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentLikeId != null">
        comment_like_id,
      </if>
      <if test="commentLikeComment != null">
        comment_like_comment,
      </if>
      <if test="commentLikeUser != null">
        comment_like_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentLikeId != null">
        #{commentLikeId,jdbcType=INTEGER},
      </if>
      <if test="commentLikeComment != null">
        #{commentLikeComment,jdbcType=INTEGER},
      </if>
      <if test="commentLikeUser != null">
        #{commentLikeUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Like">
    update like
    <set>
      <if test="commentLikeComment != null">
        comment_like_comment = #{commentLikeComment,jdbcType=INTEGER},
      </if>
      <if test="commentLikeUser != null">
        comment_like_user = #{commentLikeUser,jdbcType=INTEGER},
      </if>
    </set>
    where comment_like_id = #{commentLikeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Like">
    update like
    set comment_like_comment = #{commentLikeComment,jdbcType=INTEGER},
      comment_like_user = #{commentLikeUser,jdbcType=INTEGER}
    where comment_like_id = #{commentLikeId,jdbcType=INTEGER}
  </update>
</mapper>