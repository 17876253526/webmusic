<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.DownloadMapper">
  <resultMap id="BaseResultMap" type="entity.Download">
    <id column="download_id" jdbcType="INTEGER" property="downloadId" />
    <result column="download_user" jdbcType="INTEGER" property="downloadUser" />
    <result column="download_song" jdbcType="INTEGER" property="downloadSong" />
    <result column="download_time" jdbcType="TIMESTAMP" property="downloadTime" />
  </resultMap>
  <sql id="Base_Column_List">
    download_id, download_user, download_song, download_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from download
    where download_id = #{downloadId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from download
    where download_id = #{downloadId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="entity.Download">
    insert into download (download_id, download_user, download_song, 
      download_time)
    values (#{downloadId,jdbcType=INTEGER}, #{downloadUser,jdbcType=INTEGER}, #{downloadSong,jdbcType=INTEGER}, 
      #{downloadTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="entity.Download">
    insert into download
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="downloadId != null">
        download_id,
      </if>
      <if test="downloadUser != null">
        download_user,
      </if>
      <if test="downloadSong != null">
        download_song,
      </if>
      <if test="downloadTime != null">
        download_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="downloadId != null">
        #{downloadId,jdbcType=INTEGER},
      </if>
      <if test="downloadUser != null">
        #{downloadUser,jdbcType=INTEGER},
      </if>
      <if test="downloadSong != null">
        #{downloadSong,jdbcType=INTEGER},
      </if>
      <if test="downloadTime != null">
        #{downloadTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Download">
    update download
    <set>
      <if test="downloadUser != null">
        download_user = #{downloadUser,jdbcType=INTEGER},
      </if>
      <if test="downloadSong != null">
        download_song = #{downloadSong,jdbcType=INTEGER},
      </if>
      <if test="downloadTime != null">
        download_time = #{downloadTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where download_id = #{downloadId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Download">
    update download
    set download_user = #{downloadUser,jdbcType=INTEGER},
      download_song = #{downloadSong,jdbcType=INTEGER},
      download_time = #{downloadTime,jdbcType=TIMESTAMP}
    where download_id = #{downloadId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="entity.Download">
    <id column="download_id" jdbcType="INTEGER" property="downloadId" />
    <result column="download_user" jdbcType="INTEGER" property="downloadUser" />
    <result column="download_song" jdbcType="INTEGER" property="downloadSong" />
    <result column="download_time" jdbcType="TIMESTAMP" property="downloadTime" />
  </resultMap>
  <sql id="Base_Column_List">
    download_id, download_user, download_song, download_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from download
    where download_id = #{downloadId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from download
    where download_id = #{downloadId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="entity.Download">
    insert into download (download_id, download_user, download_song, 
      download_time)
    values (#{downloadId,jdbcType=INTEGER}, #{downloadUser,jdbcType=INTEGER}, #{downloadSong,jdbcType=INTEGER}, 
      #{downloadTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="entity.Download">
    insert into download
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="downloadId != null">
        download_id,
      </if>
      <if test="downloadUser != null">
        download_user,
      </if>
      <if test="downloadSong != null">
        download_song,
      </if>
      <if test="downloadTime != null">
        download_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="downloadId != null">
        #{downloadId,jdbcType=INTEGER},
      </if>
      <if test="downloadUser != null">
        #{downloadUser,jdbcType=INTEGER},
      </if>
      <if test="downloadSong != null">
        #{downloadSong,jdbcType=INTEGER},
      </if>
      <if test="downloadTime != null">
        #{downloadTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Download">
    update download
    <set>
      <if test="downloadUser != null">
        download_user = #{downloadUser,jdbcType=INTEGER},
      </if>
      <if test="downloadSong != null">
        download_song = #{downloadSong,jdbcType=INTEGER},
      </if>
      <if test="downloadTime != null">
        download_time = #{downloadTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where download_id = #{downloadId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Download">
    update download
    set download_user = #{downloadUser,jdbcType=INTEGER},
      download_song = #{downloadSong,jdbcType=INTEGER},
      download_time = #{downloadTime,jdbcType=TIMESTAMP}
    where download_id = #{downloadId,jdbcType=INTEGER}
  </update>
</mapper>