<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.secondgroud.front.webmusic.mapper.SingerMapper" >
  <resultMap id="BaseResultMap" type="com.secondgroud.front.webmusic.entity.Singer" >
    <id column="sing_id" property="singId" jdbcType="INTEGER" />
    <result column="fans_num" property="fansNum" jdbcType="BIGINT" />
    <result column="singer_user" property="singerUser" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.secondgroud.front.webmusic.entity.Singer" extends="BaseResultMap" >
    <result column="selfIntro" property="selfintro" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    sing_id, fans_num, singer_user
  </sql>
  <sql id="Blob_Column_List" >
    selfIntro
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from singer
    where sing_id = #{singId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from singer
    where sing_id = #{singId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.secondgroud.front.webmusic.entity.Singer" >
    insert into singer (sing_id, fans_num, singer_user, 
      selfIntro)
    values (#{singId,jdbcType=INTEGER}, #{fansNum,jdbcType=BIGINT}, #{singerUser,jdbcType=INTEGER}, 
      #{selfintro,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.secondgroud.front.webmusic.entity.Singer" >
    insert into singer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="singId != null" >
        sing_id,
      </if>
      <if test="fansNum != null" >
        fans_num,
      </if>
      <if test="singerUser != null" >
        singer_user,
      </if>
      <if test="selfintro != null" >
        selfIntro,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="singId != null" >
        #{singId,jdbcType=INTEGER},
      </if>
      <if test="fansNum != null" >
        #{fansNum,jdbcType=BIGINT},
      </if>
      <if test="singerUser != null" >
        #{singerUser,jdbcType=INTEGER},
      </if>
      <if test="selfintro != null" >
        #{selfintro,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.secondgroud.front.webmusic.entity.Singer" >
    update singer
    <set >
      <if test="fansNum != null" >
        fans_num = #{fansNum,jdbcType=BIGINT},
      </if>
      <if test="singerUser != null" >
        singer_user = #{singerUser,jdbcType=INTEGER},
      </if>
      <if test="selfintro != null" >
        selfIntro = #{selfintro,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where sing_id = #{singId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.secondgroud.front.webmusic.entity.Singer" >
    update singer
    set fans_num = #{fansNum,jdbcType=BIGINT},
      singer_user = #{singerUser,jdbcType=INTEGER},
      selfIntro = #{selfintro,jdbcType=LONGVARCHAR}
    where sing_id = #{singId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.secondgroud.front.webmusic.entity.Singer" >
    update singer
    set fans_num = #{fansNum,jdbcType=BIGINT},
      singer_user = #{singerUser,jdbcType=INTEGER}
    where sing_id = #{singId,jdbcType=INTEGER}
  </update>
</mapper>